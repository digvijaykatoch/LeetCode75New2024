/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean hasPathSum(TreeNode root, int targetSum) {

        return checkPath(root,0,targetSum);
        
    }

    public boolean checkPath(TreeNode node,int matchSum, int targetSum){
        if(node==null){
            matchSum = 0;
            return false;
        }

        matchSum=matchSum + node.val;

        if(node.left==null && node.right==null){
            //then its a leaf node
            
            if(matchSum==targetSum){
                return true;
            }
            else{
                return false;
            }
        } else{
            return checkPath(node.left, matchSum,targetSum) || checkPath(node.right, matchSum, targetSum);
        }




    }
}
