/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean leafSimilar(TreeNode root1, TreeNode root2) {
        return dfs(root1).equals(dfs(root2));
    }

    private List<Integer> dfs(TreeNode node) {
        List<Integer> result = new ArrayList<>();
        
        if(node==null){
            return result;
        } else{
            if(node.left==null && node.right==null){
                result.add(node.val);
            } else{
                result.addAll(dfs(node.left));
                result.addAll(dfs(node.right));
            }
        }

        return result;
    }
}
